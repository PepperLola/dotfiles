#!/bin/zsh
BOX_WIDTH=50
tell_cmd="tell application \"Music\" to"
function run_command() {
    echo "osascript -e '" $tell_cmd $* "'" | zsh
}
if (( ${#@} != 0 )); then
    case $1 in
        pause)
            run_command "pause"
            exit 1
            ;;
        unpause)
            run_command "play"
            exit 1
            ;;
        playpause)
            run_command "playpause"
            exit 1
            ;;
        skip | next)
            run_command "next track"
            exit 1
            ;;
        back | prev)
            run_command "back track"
            exit 1
            ;;
        previous)
            run_command "previous track"
            exit 1
            ;;
    esac
fi
function remove_colors() {
    echo $(echo $1 | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g")
}
function save_cover() {
    cover_dir=$(echo ~ | sed "s/\//:/g" | sed "s/://")
    osascript -ss \
              -e 'on run argv' \
              -e 'tell application "Music" to set artworkData to raw data of artwork 1 of current track' \
              -e 'set imageFile to item 1 of argv & ":cover.jpg"' \
              -e 'set outFile to open for access file imageFile with write permission' \
              -e 'write artworkData to outFile' \
              -e 'close access outFile' \
              -e 'end run' \
              -- $cover_dir
}
function display_cover() {
    save_cover
    ~/.iterm2/imgcat -H 128px ~/cover.jpg
}
function get_track_info() {
    echo $(run_command "get $1 of current track")
}
function get_all_track_properties() {
    echo $(get_track_info "properties")
}
function get_application_property() {
    echo $(run_command "get $1")
}
function get_all_application_properties() {
    echo $(get_application_property "properties")
}
function get_name() {
    echo $(echo $1 | awk 'match($0, /, name:([^:]*),/) { print substr($0, RSTART+7, RLENGTH-8) }')
}
function get_artist() {
    echo $(echo $1 | awk 'match($0, /, artist:([^:]*),/) { print substr($0, RSTART+9, RLENGTH-10) }')
}
function get_album() {
    echo $(echo $1 | awk 'match($0, /, album:([^:]*),/) { print substr($0, RSTART+8, RLENGTH-9) }')
}
function get_track_length() {
    echo $(echo $1 | awk 'match($0, /, duration:([0-9.]+)/) { print substr($0, RSTART+11, RLENGTH-11) }')
}
function get_player_position() {
    echo $(echo $1 | awk 'match($0, /, player position:([0-9.]+)/) { print substr($0, RSTART+18, RLENGTH-18) }')
}
function print_progress_bar() {
    width=$2
    full=$(echo "$width - 2" | /usr/bin/bc)
    curr=$(echo "scale=2; $1 / 100 * $full" | /usr/bin/bc)
    if (( $curr == 0 )); then
        printf '\033[0;90m━%.0s' $(seq 0 $width)
    elif (( $curr == $full )); then
        printf '\033[0;32m━%.0s' $(seq 0 $width)
    else
        printf '\033[0;32m━%.0s' $(seq 0 $curr)
        printf '╸\033[0;90m╺'
        printf '━%.0s' $(seq $(echo "$curr" | /usr/bin/bc) $full)
    fi
    printf '\033[0m'
}
function draw_box_row() {
    str=$(remove_colors $1)
    w=$(echo "$BOX_WIDTH - ${#str}" | /usr/bin/bc)
    printf "│ $1\033[0m"
    printf " %.0s" $(seq 0 $(echo "$BOX_WIDTH - ${#str} - 1" | /usr/bin/bc))
    printf "│\n"
}
track_props=$(get_all_track_properties)
app_props=$(get_all_application_properties)
# echo $track_props
# echo $app_props
# display_cover
player_pos=$(get_player_position $app_props)
track_length=$(get_track_length $track_props)
progress=$(echo "scale=2; $player_pos / $track_length * 100" | /usr/bin/bc)
# echo $progress
track_name=$(get_name $track_props)
artist_name=$(get_artist $track_props)
album_name=$(get_album $track_props)
printf '╭'
printf '─%.0s' $(seq 0 $BOX_WIDTH)
printf '╮\n'
draw_box_row "\033[0;94m󰝚\033[0;35m $track_name"
draw_box_row "\033[0;94m\033[0;35m $artist_name"
draw_box_row "\033[0;94m󰀥\033[0;35m $album_name"
printf "│"
print_progress_bar $progress $BOX_WIDTH
printf "│\n"
printf '╰'
printf '─%.0s' $(seq 0 $BOX_WIDTH)
printf '╯\n'
